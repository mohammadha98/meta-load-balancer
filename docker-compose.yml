
services:
  svc1:
    build:
      context: ./services/svc1
    networks:
      - app-network

  svc2:
    build:
      context: ./services/svc2
    networks:
      - app-network

  svc3:
    build:
      context: ./services/svc3
    networks:
      - app-network

  lb:
    build:
      context: ./lb
    ports:
      - "80:80"
      - "7000:7000"
      - "9102:9102"
    depends_on:
      - svc1
      - svc2
      - svc3
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - app-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor-amd64:v0.50.0
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=grafana-clock-panel
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    networks:
      - app-network

  meta-lb:
    build:
      context: ./meta-lb
    ports:
      - "8000:8000"
    volumes:
      - ./lb-conf:/etc/nginx/conf.d
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - prometheus
      - lb
    networks:
      - app-network

  locust:
    build:
      context: ./locust
    ports:
      - "8089:8089"
    environment:
      - LOCUST_HOST=http://lb
    networks:
      - app-network

  data-gen:
    image: python:3.10-slim
    container_name: data-gen
    working_dir: /app
    volumes:
      - ./:/app
    command: >
      bash -c "
        pip install --no-cache-dir requests prometheus-api-client pandas locust &&
        python generate_dataset.py
      "
    depends_on:
      - locust
      - lb
      - prometheus
    networks:
      - app-network

  model-trainer:
    build: ./meta-lb
    container_name: model-trainer
    working_dir: /app
    volumes:
      - ./:/app
    command: ["python", "train_model.py"]
    depends_on:
      - data-gen
    networks:
      - app-network


networks:
  app-network:
    driver: bridge

volumes:
  grafana_data:
